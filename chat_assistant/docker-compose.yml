# Medical Quiz Assistant Docker Compose for MVP

services:
  # Main application 
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=INFO
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000 
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - RAG_ENABLED=true
    depends_on:
      redis:
        condition: service_healthy
      chroma:
        condition: service_healthy
      ollama:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs  
      - ./data:/app/data  
    networks:
      - rag-network
    restart: unless-stopped
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    tmpfs:
      - /tmp:rw,noexec,nosuid,nodev
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2g  
          pids: 256
    stop_grace_period: 30s
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Redis - essential for sessions
  redis:
    image: redis:7.4.1-alpine 
    volumes:
      - redis_data:/data
    networks:
      - rag-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256m 
          pids: 128

  # ChromaDB - essential for vector storage in RAG
  chroma:
    image: chromadb/chroma:0.5.15 
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - rag-network
    restart: unless-stopped
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1g  # Reduced for MVP
          pids: 256

  # Ollama - essential for LLM in MVP
  ollama:
    image: ollama/ollama:0.3.14  
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rag-network
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_PORT=11434
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:11434"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: >
      sh -c "ollama serve & sleep 5 && ollama pull llama3.2:1b && wait"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2g  
          pids: 256

  # Prometheus 
  prometheus:
    image: prom/prometheus:v2.54.1  # Keep pinned; no update needed
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - rag-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256m
          pids: 128
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Grafana - dashboards for  observability
  grafana:
    image: grafana/grafana:11.2.0  # Keep pinned
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./monitoring/grafana/datasources:/var/lib/grafana/provisioning/datasources:ro
    networks:
      - rag-network
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Default for MVP simplicity; CHANGE THIS IMMEDIATELY IN UI OR USE SECRETS IN PROD
      - GF_USERS_ALLOW_SIGN_UP=false
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256m
          pids: 128
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis_data:
  chroma_data:
  ollama_data:
  prometheus_data:
  grafana_data:

networks:
  rag-network:
    driver: bridge